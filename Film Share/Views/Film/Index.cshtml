@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@model FilmShare.ViewModels.FilmModel

@{
    ViewData["Title"] = Model.FilmName;
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}

<div class="col-md-6 col-md-offset-3 profileWrap">
    <div class="text-center">
        <h2>@Model.FilmName</h2>
    </div>
    <div class="profileInfo">
        <div class="leftProfile">
            <div class="avatarUserBox">
                <img src=@Model.PosterPath style='height: 100%; width: 100%; object-fit: contain'>
            </div>
        </div>

        <div class="form-group">
            <p>
                <b>@Localizer["YEAR:"] </b>@Model.Year
            </p>
            <p>
                <b>@Localizer["COUNTRY:"] </b>@Model.Country
            </p>
            <p>
                <b>@Localizer["AVERAGE RANK:"] </b>
                <span id="rank">
                    @if (Model.AverageRank == 0)
                    {
                        @Localizer["No ranks were found"]
                    }
                    else
                    {
                        @: @Model.AverageRank
                                            }
                    </span>
            </p>
            <a asp-controller="Film" asp-action="FilmActors" asp-route-filmId="@Model.FilmId">@Localizer["Show Film Actors"]</a>
</div>
    </div>

    <div class="reviewInputContainer">
        <p>@Localizer["New review:"]</p>
        <div style="margin-left: 5%">
            <p style="display: inline; vertical-align: top;">@Localizer["Rating:"] </p>
            <rating id="reviewRating"></rating>
        </div>
        <textarea id="reviewText" rows="4" class="reviewInput"></textarea>
        <input type="button" onclick="addReview(@Model.FilmId)" title="Add review" value="@Localizer["Add review"]" class="btn reviewButton" />
    </div>

    <div id="reviewsContainer">
        @await Component.InvokeAsync("FilmShare.Components.Film.Reviews", new { filmId = Model.FilmId })
    </div>
</div>

<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script>
    "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/review").build();

    connection.on("ReceiveReview", function (responce) {
        console.log(responce);
        if (!responce.item1) alert("Error in adding the review");

        document.getElementById("rank").innerHTML = responce.item3;

        let review = responce.item2;

        var reviewClass = "review";
        if (review.rating >= 8) {
            reviewClass += " good";
        }
        else if (review.rating <= 4) {
            reviewClass += " bad";
        }

        let date = new Date(review.reviewDate)
        let dateFormat = date.toLocaleDateString() + ' ' + date.toLocaleTimeString();

        let html = '<div class="' + reviewClass + '"><div><img width="46" class="reviewProfilePhoto" src="' + review.userPhotoPath +
            '"><div><p class="profile_name"><s></s><a href="/' + review.profileId + '"><b>' + review.userName + '</b></a></p></div></div><table><tbody><tr><td><div><p><span>'
            + review.text + '</span><br><br><span>Rating: ' + review.rating + '</span></p></div></td></tr></tbody></table><span class="reviewDate">' + dateFormat + '</span></div>';

        $("#reviewsContainer").html(html + $("#reviewsContainer").html())
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    function addReview(id) {
        if (!$.trim($("#reviewText").val())) { alert("No review was writen. Can't add the review."); return; }
        var ratingDDL = document.getElementById("reviewRating");
        var rating = ratingDDL.options[ratingDDL.selectedIndex].value;

        connection.invoke("AddReview", id, rating, $('#reviewText').val()).catch(function (err) {
            return console.error(err.toString());
        });
    }
</script>